import { SlashCommandBuilder, EmbedBuilder } from 'discord.js';
import User from '../../Schemas/userSchema.js';

export const data = new SlashCommandBuilder()
    .setName('check')
    .setDescription('–ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ —É—á–∞—Å–Ω–∏–∫—ñ–≤ –≥—ñ–ª—å–¥—ñ—ó –Ω–∞ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –ø–æ–ø–µ—Ä–µ–¥–∂–µ–Ω—å')
    .addStringOption(option =>
        option.setName('guild_id')
            .setDescription('–ê–π–¥—ñ –≥—ñ–ª—å–¥—ñ—ó')
            .setRequired(true),
    );

    export async function execute(interaction) {
        try {
          
            console.log('Guild ID:', interaction.guild.id);
            console.log('User ID:', interaction.user.id);
            if (interaction.guild.id !== '1350582961904550022' || interaction.user.id !== '558945911980556288') {
                return await interaction.reply({ 
                    content: '–£ –≤–∞—Å –Ω–µ–º–∞—î –¥–æ—Å—Ç—É–ø—É –¥–æ —Ü—ñ—î—ó –∫–æ–º–∞–Ω–¥–∏.', 
                    ephemeral: true 
                });
            }
            
            const guildId = interaction.options.getString('guild_id');
            const guild = await interaction.client.guilds.fetch(guildId);
            const guildMembers = await guild.members.fetch();
    

            const warnedUsers = await User.find({ warns: { $gt: 0 } });
            console.log('Warned Users:', JSON.stringify(warnedUsers, null, 2));
    

            const warnedMembers = warnedUsers.filter(user => {
                console.log(`Checking user ID: ${user._id}`); 
                return guildMembers.has(user._id); 
            });
            console.log('Warned Members:', warnedMembers);
    
            if (warnedMembers.length === 0) {
                return await interaction.reply({ 
                    content: '–£ —Ü—ñ–π –≥—ñ–ª—å–¥—ñ—ó –Ω–µ–º–∞—î —É—á–∞—Å–Ω–∏–∫—ñ–≤ —ñ–∑ –ø–æ–ø–µ—Ä–µ–¥–∂–µ–Ω–Ω—è–º–∏.', 
                    ephemeral: true 
                });
            }
    
            const embed = new EmbedBuilder()
                .setTitle('üìã –°–ø–∏—Å–æ–∫ —É—á–∞—Å–Ω–∏–∫—ñ–≤ –∑ –ø–æ–ø–µ—Ä–µ–¥–∂–µ–Ω–Ω—è–º–∏')
                .setColor('#ff0000')
                .setDescription(
                    warnedMembers.map(user => `üë§ <@${user._id}> - ‚ö†Ô∏è –ü–æ–ø–µ—Ä–µ–¥–∂–µ–Ω—å: ${user.warns}`).join('\n')
                )
                .setFooter({ text: `–ì—ñ–ª—å–¥—ñ—è: ${guild.name}` });
    
            await interaction.deferReply(); 
            await interaction.editReply({ embeds: [embed] }); 
    
        } catch (error) {
            console.error('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤–∏–∫–æ–Ω–∞–Ω–Ω—ñ –∫–æ–º–∞–Ω–¥–∏ /check:', error);
            await interaction.reply({ 
                content: '–°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–≤—ñ—Ä—Ü—ñ —É—á–∞—Å–Ω–∏–∫—ñ–≤.', 
                ephemeral: true 
            });
        }
    }
    