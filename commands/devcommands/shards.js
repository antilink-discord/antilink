import 'dotenv/config';
import { SlashCommandBuilder } from "discord.js";
import { shardManager } from '../shardManager.js'; // –Ü–º–ø–æ—Ä—Ç—É—î–º–æ –º–µ–Ω–µ–¥–∂–µ—Ä

export const data = new SlashCommandBuilder()
    .setName('shards')
    .setDescription('–ü–æ–∫–∞–∑—É—î —Å—Ç–∞—Ç—É—Å —É—Å—ñ—Ö —à–∞—Ä–¥—ñ–≤');

export async function execute(interaction) {
    if (interaction.user.id !== '558945911980556288') {
        return await interaction.reply('–£ –≤–∞—Å –Ω–µ–º–∞—î –¥–æ—Å—Ç—É–ø—É –¥–æ —Ü—ñ—î—ó –∫–æ–º–∞–Ω–¥–∏.');
    }

    try {
        if (!shardManager) {
            return await interaction.reply('–ú–µ–Ω–µ–¥–∂–µ—Ä —à–∞—Ä–¥—ñ–≤ –Ω–µ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–∏–π.');
        }

        // –û—Ç—Ä–∏–º—É—î–º–æ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –≤—Å—ñ —à–∞—Ä–¥–∏
        const shardInfo = await shardManager.fetchClientValues('guilds.cache.size');
        
        const statusMessages = shardInfo.map((guildCount, shardId) => {
            const shard = shardManager.shards.get(shardId);
            const status = shard?.status || 'unknown';
            return `–®–∞—Ä–¥ ${shardId}: ${statusToText(status)} | –°–µ—Ä–≤–µ—Ä—ñ–≤: ${guildCount}`;
        });

        await interaction.reply({
            content: `**–°—Ç–∞—Ç—É—Å —à–∞—Ä–¥—ñ–≤:**\n${statusMessages.join('\n')}`,
            ephemeral: true
        });

    } catch (error) {
        console.error('–ü–æ–º–∏–ª–∫–∞ –∫–æ–º–∞–Ω–¥–∏ shards:', error);
        await interaction.reply('–°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ —Å—Ç–∞—Ç—É—Å—É —à–∞—Ä–¥—ñ–≤.');
    }
}

function statusToText(status) {
    const statusMap = {
        'ready': 'üü¢ –û–Ω–ª–∞–π–Ω',
        'disconnected': 'üî¥ –û—Ñ—Ñ–ª–∞–π–Ω',
        'connecting': 'üü° –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è',
        'identifying': 'üü£ –Ü–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—è',
        'resuming': 'üîµ –í—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è'
    };
    return statusMap[status] || '‚ùì –ù–µ–≤—ñ–¥–æ–º–æ';
}